syntax = "proto3";

package almanac;

// A log entry.
message LogEntry {
  // The json representation of the entry as supplied by the user.
  string entry_json = 1;

  // An epoch timestamp in milliseconds associated with this entry.
  int64 timestamp_ms = 2;

  // A globally unique id for this log entry.
  string id = 3;
}

message BleveIndex {
  // Holds the bytes corresponding to a zip archive containing the entire
  // directory tree as used by Bleve.
  bytes directory_zip = 1;
}

// Holds the data used to identify a chunk.
message ChunkId {
  // The smallest timestamp of any entry present in the chunk.
  int64 start_ms = 1;

  // The greatest timestamp of any entry present in the chunk.
  int64 end_ms = 2;

  // A unique id used to avoid chunk id collisions for chunks produced on
  // different machines.
  string uid = 3;

  enum Type {
    // Enum sentinel to make sure that the value is always set explicitly.
    UNKNOWN_TYPE = 0;

    // Small chunks hold few entries and have a small spread.
    SMALL = 1;

    // Big chunks hold many entries and have a large spread.
    BIG = 2;
  }

  // Must be set to something other than "UNKNOWN_TYPE".
  Type type = 4;
}

// Represents a chunk of log entries and some additional information about the
// entries.
message Chunk {
  // The identifier of this chunk. Used to determine its name in canonical
  // storage.
  ChunkId id = 1;

  // The raw entries present in this chunk.
  repeated LogEntry entries = 2;

  // An serialized index which can be used to perform searches.
  BleveIndex index = 3;
}
